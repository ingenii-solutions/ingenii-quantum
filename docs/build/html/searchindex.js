Search.setIndex({"alltitles": {"Installation": [[0, "installation"], [5, null]], "Module contents": [[1, "module-ingenii_quantum"], [2, "module-ingenii_quantum.hybrid_networks"], [3, "module-ingenii_quantum.qubo"], [4, "module-ingenii_quantum.tensor_networks"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "Subpackages": [[1, "subpackages"]], "Table of Contents": [[0, "table-of-contents"]], "Welcome to Ingenii Quantum\u2019s Documentation!": [[0, null]], "ingenii_quantum": [[6, null]], "ingenii_quantum package": [[1, null]], "ingenii_quantum.custom module": [[1, "module-ingenii_quantum.custom"]], "ingenii_quantum.exercises module": [[1, "module-ingenii_quantum.exercises"]], "ingenii_quantum.hybrid_networks package": [[2, null]], "ingenii_quantum.hybrid_networks.edge_detection module": [[2, "module-ingenii_quantum.hybrid_networks.edge_detection"]], "ingenii_quantum.hybrid_networks.filters module": [[2, "module-ingenii_quantum.hybrid_networks.filters"]], "ingenii_quantum.hybrid_networks.layers module": [[2, "module-ingenii_quantum.hybrid_networks.layers"]], "ingenii_quantum.hybrid_networks.qinsp_filter module": [[2, "module-ingenii_quantum.hybrid_networks.qinsp_filter"]], "ingenii_quantum.hybrid_networks.statistics module": [[2, "module-ingenii_quantum.hybrid_networks.statistics"]], "ingenii_quantum.hybrid_networks.utils module": [[2, "module-ingenii_quantum.hybrid_networks.utils"]], "ingenii_quantum.qubo package": [[3, null]], "ingenii_quantum.qubo.graph module": [[3, "module-ingenii_quantum.qubo.graph"]], "ingenii_quantum.qubo.segmentation module": [[3, "module-ingenii_quantum.qubo.segmentation"]], "ingenii_quantum.tensor_networks package": [[4, null]], "ingenii_quantum.tensor_networks.VBMF module": [[4, "module-ingenii_quantum.tensor_networks.VBMF"]], "ingenii_quantum.tensor_networks.tucker_decomposition module": [[4, "module-ingenii_quantum.tensor_networks.tucker_decomposition"]], "ingenii_quantum.visualizer module": [[1, "module-ingenii_quantum.visualizer"]]}, "docnames": ["index", "ingenii_quantum", "ingenii_quantum.hybrid_networks", "ingenii_quantum.qubo", "ingenii_quantum.tensor_networks", "installation", "modules"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "ingenii_quantum.rst", "ingenii_quantum.hybrid_networks.rst", "ingenii_quantum.qubo.rst", "ingenii_quantum.tensor_networks.rst", "installation.rst", "modules.rst"], "indexentries": {"apply_ansatz() (ingenii_quantum.hybrid_networks.layers.quantumfclayer method)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.apply_ansatz", false]], "apply_similarity() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.apply_similarity", false]], "area_segment() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.area_segment", false]], "bit_string_index() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.bit_string_index", false]], "canberra_distance() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.canberra_distance", false]], "chebyshev_distance() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.chebyshev_distance", false]], "check_convergence() (ingenii_quantum.hybrid_networks.qinsp_filter.quantuminspiredimageprocessor method)": [[2, "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor.check_convergence", false]], "class_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector2d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D.class_parameters", false]], "class_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector3d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D.class_parameters", false]], "class_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters2d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D.class_parameters", false]], "class_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters3d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D.class_parameters", false]], "class_parameters (ingenii_quantum.hybrid_networks.layers.quantumfclayer attribute)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.class_parameters", false]], "color_range() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.color_range", false]], "compute_expressibility() (ingenii_quantum.hybrid_networks.statistics.expressibility method)": [[2, "ingenii_quantum.hybrid_networks.statistics.Expressibility.compute_expressibility", false]], "count_control_num() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.count_control_num", false]], "count_params() (in module ingenii_quantum.tensor_networks.tucker_decomposition)": [[4, "ingenii_quantum.tensor_networks.tucker_decomposition.count_params", false]], "create_graph() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.create_graph", false]], "create_layer() (ingenii_quantum.hybrid_networks.layers.quantumfclayer method)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.create_layer", false]], "decode_binary_string() (in module ingenii_quantum.qubo.segmentation)": [[3, "ingenii_quantum.qubo.segmentation.decode_binary_string", false]], "description (ingenii_quantum.hybrid_networks.edge_detection.edgedetector2d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D.description", false]], "description (ingenii_quantum.hybrid_networks.edge_detection.edgedetector3d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D.description", false]], "description (ingenii_quantum.hybrid_networks.filters.quantumfilters2d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D.description", false]], "description (ingenii_quantum.hybrid_networks.filters.quantumfilters3d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D.description", false]], "description (ingenii_quantum.hybrid_networks.layers.quantumfclayer attribute)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.description", false]], "draw_arrow() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_arrow", false]], "draw_basis_states() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_basis_states", false]], "draw_bloch_sphere() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_bloch_sphere", false]], "draw_color_legend() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_color_legend", false]], "draw_geometric_plots() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_geometric_plots", false]], "draw_phase_disks() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_phase_disks", false]], "draw_probabilities() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_probabilities", false]], "draw_qsphere() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_qsphere", false]], "draw_state_space() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.draw_state_space", false]], "edgedetector2d (class in ingenii_quantum.hybrid_networks.edge_detection)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D", false]], "edgedetector3d (class in ingenii_quantum.hybrid_networks.edge_detection)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D", false]], "edgedetectorbase (class in ingenii_quantum.hybrid_networks.edge_detection)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetectorBase", false]], "entanglingcapacity (class in ingenii_quantum.hybrid_networks.statistics)": [[2, "ingenii_quantum.hybrid_networks.statistics.EntanglingCapacity", false]], "estimate_ranks() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.estimate_ranks", false]], "euclidean_distance() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.euclidean_distance", false]], "evbmf() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.EVBMF", false]], "evbsigma2() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.EVBsigma2", false]], "example_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector2d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D.example_parameters", false]], "example_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector3d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D.example_parameters", false]], "example_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters2d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D.example_parameters", false]], "example_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters3d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D.example_parameters", false]], "example_parameters (ingenii_quantum.hybrid_networks.layers.quantumfclayer attribute)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.example_parameters", false]], "exercise2_1() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise2_1", false]], "exercise2_2() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise2_2", false]], "exercise2_3() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise2_3", false]], "exercise2_4() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise2_4", false]], "exercise2_5() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise2_5", false]], "exercise3_1() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_1", false]], "exercise3_10() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_10", false]], "exercise3_2() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_2", false]], "exercise3_3() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_3", false]], "exercise3_4() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_4", false]], "exercise3_5() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_5", false]], "exercise3_6() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_6", false]], "exercise3_7() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_7", false]], "exercise3_8() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_8", false]], "exercise3_9() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise3_9", false]], "exercise4_1() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise4_1", false]], "exercise4_3() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise4_3", false]], "exercise5_7() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise5_7", false]], "exercise6_1() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise6_1", false]], "exercise6_2() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise6_2", false]], "exercise6_3() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise6_3", false]], "exercise6_4() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise6_4", false]], "exercise6_6() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.exercise6_6", false]], "expressibility (class in ingenii_quantum.hybrid_networks.statistics)": [[2, "ingenii_quantum.hybrid_networks.statistics.Expressibility", false]], "flip_bit() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.flip_bit", false]], "gate_names (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.gate_names", false]], "gaussian_similarity() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.gaussian_similarity", false]], "generate_qc() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.generate_qc", false]], "generate_random_params() (ingenii_quantum.hybrid_networks.statistics.entanglingcapacity method)": [[2, "ingenii_quantum.hybrid_networks.statistics.EntanglingCapacity.generate_random_params", false]], "generate_random_params() (ingenii_quantum.hybrid_networks.statistics.expressibility method)": [[2, "ingenii_quantum.hybrid_networks.statistics.Expressibility.generate_random_params", false]], "generate_reservoirs() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.generate_reservoirs", false]], "generate_unitaries() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.generate_unitaries", false]], "get_colors() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.get_colors", false]], "get_quantum_filters() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.get_quantum_filters", false]], "get_secret_state() (in module ingenii_quantum.exercises)": [[1, "ingenii_quantum.exercises.get_secret_state", false]], "get_shapes() (ingenii_quantum.hybrid_networks.layers.quantumfclayer method)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.get_shapes", false]], "get_statevectors() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.get_statevectors", false]], "get_transformed_bitstrings() (ingenii_quantum.visualizer.quantumvisualizer method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.get_transformed_bitstrings", false]], "gurobi_qubo_solver() (in module ingenii_quantum.qubo.segmentation)": [[3, "ingenii_quantum.qubo.segmentation.gurobi_qubo_solver", false]], "haar_fidelity() (ingenii_quantum.hybrid_networks.statistics.expressibility method)": [[2, "ingenii_quantum.hybrid_networks.statistics.Expressibility.haar_fidelity", false]], "height_for_probability() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.height_for_probability", false]], "hex_to_rgb() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.hex_to_rgb", false]], "image_to_grid_graph() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.image_to_grid_graph", false]], "ingenii_quantum": [[1, "module-ingenii_quantum", false]], "ingenii_quantum.custom": [[1, "module-ingenii_quantum.custom", false]], "ingenii_quantum.exercises": [[1, "module-ingenii_quantum.exercises", false]], "ingenii_quantum.hybrid_networks": [[2, "module-ingenii_quantum.hybrid_networks", false]], "ingenii_quantum.hybrid_networks.edge_detection": [[2, "module-ingenii_quantum.hybrid_networks.edge_detection", false]], "ingenii_quantum.hybrid_networks.filters": [[2, "module-ingenii_quantum.hybrid_networks.filters", false]], "ingenii_quantum.hybrid_networks.layers": [[2, "module-ingenii_quantum.hybrid_networks.layers", false]], "ingenii_quantum.hybrid_networks.qinsp_filter": [[2, "module-ingenii_quantum.hybrid_networks.qinsp_filter", false]], "ingenii_quantum.hybrid_networks.statistics": [[2, "module-ingenii_quantum.hybrid_networks.statistics", false]], "ingenii_quantum.hybrid_networks.utils": [[2, "module-ingenii_quantum.hybrid_networks.utils", false]], "ingenii_quantum.qubo": [[3, "module-ingenii_quantum.qubo", false]], "ingenii_quantum.qubo.graph": [[3, "module-ingenii_quantum.qubo.graph", false]], "ingenii_quantum.qubo.segmentation": [[3, "module-ingenii_quantum.qubo.segmentation", false]], "ingenii_quantum.tensor_networks": [[4, "module-ingenii_quantum.tensor_networks", false]], "ingenii_quantum.tensor_networks.tucker_decomposition": [[4, "module-ingenii_quantum.tensor_networks.tucker_decomposition", false]], "ingenii_quantum.tensor_networks.vbmf": [[4, "module-ingenii_quantum.tensor_networks.VBMF", false]], "ingenii_quantum.visualizer": [[1, "module-ingenii_quantum.visualizer", false]], "jensen_shannon_divergence() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.jensen_shannon_divergence", false]], "lex_index() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.lex_index", false]], "load_gates() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.load_gates", false]], "load_reservoirs() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.load_reservoirs", false]], "load_unitaries() (ingenii_quantum.hybrid_networks.filters.quantumfiltersbase method)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase.load_unitaries", false]], "meyer_wallach_entanglement() (ingenii_quantum.hybrid_networks.statistics.entanglingcapacity method)": [[2, "ingenii_quantum.hybrid_networks.statistics.EntanglingCapacity.meyer_wallach_entanglement", false]], "minkowski_distance() (in module ingenii_quantum.qubo.graph)": [[3, "ingenii_quantum.qubo.graph.minkowski_distance", false]], "module": [[1, "module-ingenii_quantum", false], [1, "module-ingenii_quantum.custom", false], [1, "module-ingenii_quantum.exercises", false], [1, "module-ingenii_quantum.visualizer", false], [2, "module-ingenii_quantum.hybrid_networks", false], [2, "module-ingenii_quantum.hybrid_networks.edge_detection", false], [2, "module-ingenii_quantum.hybrid_networks.filters", false], [2, "module-ingenii_quantum.hybrid_networks.layers", false], [2, "module-ingenii_quantum.hybrid_networks.qinsp_filter", false], [2, "module-ingenii_quantum.hybrid_networks.statistics", false], [2, "module-ingenii_quantum.hybrid_networks.utils", false], [3, "module-ingenii_quantum.qubo", false], [3, "module-ingenii_quantum.qubo.graph", false], [3, "module-ingenii_quantum.qubo.segmentation", false], [4, "module-ingenii_quantum.tensor_networks", false], [4, "module-ingenii_quantum.tensor_networks.VBMF", false], [4, "module-ingenii_quantum.tensor_networks.tucker_decomposition", false]], "n_choose_k() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.n_choose_k", false]], "optional_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector2d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D.optional_parameters", false]], "optional_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector3d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D.optional_parameters", false]], "optional_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters2d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D.optional_parameters", false]], "optional_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters3d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D.optional_parameters", false]], "optional_parameters (ingenii_quantum.hybrid_networks.layers.quantumfclayer attribute)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.optional_parameters", false]], "phase_to_rgb() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.phase_to_rgb", false]], "phi0() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.phi0", false]], "phi1() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.phi1", false]], "pqc_fidelity() (ingenii_quantum.hybrid_networks.statistics.expressibility method)": [[2, "ingenii_quantum.hybrid_networks.statistics.Expressibility.pqc_fidelity", false]], "process() (ingenii_quantum.hybrid_networks.qinsp_filter.quantuminspiredimageprocessor method)": [[2, "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor.process", false]], "qnn_layer() (ingenii_quantum.hybrid_networks.layers.quantumfclayer method)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.qnn_layer", false]], "qnn_layer_qaoa() (ingenii_quantum.hybrid_networks.layers.quantumfclayer method)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.qnn_layer_QAOA", false]], "quantumfclayer (class in ingenii_quantum.hybrid_networks.layers)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer", false]], "quantumfilters2d (class in ingenii_quantum.hybrid_networks.filters)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D", false]], "quantumfilters3d (class in ingenii_quantum.hybrid_networks.filters)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D", false]], "quantumfiltersbase (class in ingenii_quantum.hybrid_networks.filters)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase", false]], "quantuminspiredimageprocessor (class in ingenii_quantum.hybrid_networks.qinsp_filter)": [[2, "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor", false]], "quantumvisualizer (class in ingenii_quantum.visualizer)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer", false]], "qubo_formulation() (in module ingenii_quantum.qubo.segmentation)": [[3, "ingenii_quantum.qubo.segmentation.QUBO_formulation", false]], "required_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector2d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D.required_parameters", false]], "required_parameters (ingenii_quantum.hybrid_networks.edge_detection.edgedetector3d attribute)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D.required_parameters", false]], "required_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters2d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D.required_parameters", false]], "required_parameters (ingenii_quantum.hybrid_networks.filters.quantumfilters3d attribute)": [[2, "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D.required_parameters", false]], "required_parameters (ingenii_quantum.hybrid_networks.layers.quantumfclayer attribute)": [[2, "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer.required_parameters", false]], "roll_numpy() (in module ingenii_quantum.hybrid_networks.utils)": [[2, "ingenii_quantum.hybrid_networks.utils.roll_numpy", false]], "roll_torch() (in module ingenii_quantum.hybrid_networks.utils)": [[2, "ingenii_quantum.hybrid_networks.utils.roll_torch", false]], "run() (ingenii_quantum.hybrid_networks.edge_detection.edgedetector2d method)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D.run", false]], "run() (ingenii_quantum.hybrid_networks.edge_detection.edgedetector3d method)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D.run", false]], "run_box() (ingenii_quantum.hybrid_networks.edge_detection.edgedetectorbase method)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetectorBase.run_box", false]], "run_image_qiskit() (ingenii_quantum.hybrid_networks.edge_detection.edgedetectorbase method)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetectorBase.run_image_qiskit", false]], "run_image_torch() (ingenii_quantum.hybrid_networks.edge_detection.edgedetectorbase method)": [[2, "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetectorBase.run_image_torch", false]], "select_image() (ingenii_quantum.hybrid_networks.qinsp_filter.quantuminspiredimageprocessor method)": [[2, "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor.select_image", false]], "statevector_to_angles() (ingenii_quantum.visualizer.quantumvisualizer static method)": [[1, "ingenii_quantum.visualizer.QuantumVisualizer.statevector_to_angles", false]], "sum_neighbours() (ingenii_quantum.hybrid_networks.qinsp_filter.quantuminspiredimageprocessor method)": [[2, "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor.sum_neighbours", false]], "tau() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.tau", false]], "transformation() (ingenii_quantum.hybrid_networks.qinsp_filter.quantuminspiredimageprocessor method)": [[2, "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor.transformation", false]], "tucker_decomposition_conv_layer() (in module ingenii_quantum.tensor_networks.tucker_decomposition)": [[4, "ingenii_quantum.tensor_networks.tucker_decomposition.tucker_decomposition_conv_layer", false]], "vbmf() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.VBMF", false]], "vbsigma2() (in module ingenii_quantum.tensor_networks.vbmf)": [[4, "ingenii_quantum.tensor_networks.VBMF.VBsigma2", false]]}, "objects": {"": [[1, 0, 0, "-", "ingenii_quantum"]], "ingenii_quantum": [[1, 0, 0, "-", "custom"], [1, 0, 0, "-", "exercises"], [2, 0, 0, "-", "hybrid_networks"], [3, 0, 0, "-", "qubo"], [4, 0, 0, "-", "tensor_networks"], [1, 0, 0, "-", "visualizer"]], "ingenii_quantum.exercises": [[1, 1, 1, "", "exercise2_1"], [1, 1, 1, "", "exercise2_2"], [1, 1, 1, "", "exercise2_3"], [1, 1, 1, "", "exercise2_4"], [1, 1, 1, "", "exercise2_5"], [1, 1, 1, "", "exercise3_1"], [1, 1, 1, "", "exercise3_10"], [1, 1, 1, "", "exercise3_2"], [1, 1, 1, "", "exercise3_3"], [1, 1, 1, "", "exercise3_4"], [1, 1, 1, "", "exercise3_5"], [1, 1, 1, "", "exercise3_6"], [1, 1, 1, "", "exercise3_7"], [1, 1, 1, "", "exercise3_8"], [1, 1, 1, "", "exercise3_9"], [1, 1, 1, "", "exercise4_1"], [1, 1, 1, "", "exercise4_3"], [1, 1, 1, "", "exercise5_7"], [1, 1, 1, "", "exercise6_1"], [1, 1, 1, "", "exercise6_2"], [1, 1, 1, "", "exercise6_3"], [1, 1, 1, "", "exercise6_4"], [1, 1, 1, "", "exercise6_6"], [1, 1, 1, "", "get_secret_state"]], "ingenii_quantum.hybrid_networks": [[2, 0, 0, "-", "edge_detection"], [2, 0, 0, "-", "filters"], [2, 0, 0, "-", "layers"], [2, 0, 0, "-", "qinsp_filter"], [2, 0, 0, "-", "statistics"], [2, 0, 0, "-", "utils"]], "ingenii_quantum.hybrid_networks.edge_detection": [[2, 2, 1, "", "EdgeDetector2D"], [2, 2, 1, "", "EdgeDetector3D"], [2, 2, 1, "", "EdgeDetectorBase"]], "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector2D": [[2, 3, 1, "", "class_parameters"], [2, 3, 1, "", "description"], [2, 3, 1, "", "example_parameters"], [2, 3, 1, "", "optional_parameters"], [2, 3, 1, "", "required_parameters"], [2, 4, 1, "", "run"]], "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetector3D": [[2, 3, 1, "", "class_parameters"], [2, 3, 1, "", "description"], [2, 3, 1, "", "example_parameters"], [2, 3, 1, "", "optional_parameters"], [2, 3, 1, "", "required_parameters"], [2, 4, 1, "", "run"]], "ingenii_quantum.hybrid_networks.edge_detection.EdgeDetectorBase": [[2, 4, 1, "", "run_box"], [2, 4, 1, "", "run_image_qiskit"], [2, 4, 1, "", "run_image_torch"]], "ingenii_quantum.hybrid_networks.filters": [[2, 2, 1, "", "QuantumFilters2D"], [2, 2, 1, "", "QuantumFilters3D"], [2, 2, 1, "", "QuantumFiltersBase"]], "ingenii_quantum.hybrid_networks.filters.QuantumFilters2D": [[2, 3, 1, "", "class_parameters"], [2, 3, 1, "", "description"], [2, 3, 1, "", "example_parameters"], [2, 3, 1, "", "optional_parameters"], [2, 3, 1, "", "required_parameters"]], "ingenii_quantum.hybrid_networks.filters.QuantumFilters3D": [[2, 3, 1, "", "class_parameters"], [2, 3, 1, "", "description"], [2, 3, 1, "", "example_parameters"], [2, 3, 1, "", "optional_parameters"], [2, 3, 1, "", "required_parameters"]], "ingenii_quantum.hybrid_networks.filters.QuantumFiltersBase": [[2, 3, 1, "", "gate_names"], [2, 4, 1, "", "generate_qc"], [2, 4, 1, "", "generate_reservoirs"], [2, 4, 1, "", "generate_unitaries"], [2, 4, 1, "", "get_quantum_filters"], [2, 4, 1, "", "load_gates"], [2, 4, 1, "", "load_reservoirs"], [2, 4, 1, "", "load_unitaries"]], "ingenii_quantum.hybrid_networks.layers": [[2, 2, 1, "", "QuantumFCLayer"]], "ingenii_quantum.hybrid_networks.layers.QuantumFCLayer": [[2, 4, 1, "", "apply_ansatz"], [2, 3, 1, "", "class_parameters"], [2, 4, 1, "", "create_layer"], [2, 3, 1, "", "description"], [2, 3, 1, "", "example_parameters"], [2, 4, 1, "", "get_shapes"], [2, 3, 1, "", "optional_parameters"], [2, 4, 1, "", "qnn_layer"], [2, 4, 1, "", "qnn_layer_QAOA"], [2, 3, 1, "", "required_parameters"]], "ingenii_quantum.hybrid_networks.qinsp_filter": [[2, 2, 1, "", "QuantumInspiredImageProcessor"]], "ingenii_quantum.hybrid_networks.qinsp_filter.QuantumInspiredImageProcessor": [[2, 4, 1, "", "check_convergence"], [2, 4, 1, "", "process"], [2, 4, 1, "", "select_image"], [2, 4, 1, "", "sum_neighbours"], [2, 4, 1, "", "transformation"]], "ingenii_quantum.hybrid_networks.statistics": [[2, 2, 1, "", "EntanglingCapacity"], [2, 2, 1, "", "Expressibility"]], "ingenii_quantum.hybrid_networks.statistics.EntanglingCapacity": [[2, 4, 1, "", "generate_random_params"], [2, 4, 1, "", "meyer_wallach_entanglement"]], "ingenii_quantum.hybrid_networks.statistics.Expressibility": [[2, 4, 1, "", "compute_expressibility"], [2, 4, 1, "", "generate_random_params"], [2, 4, 1, "", "haar_fidelity"], [2, 4, 1, "", "pqc_fidelity"]], "ingenii_quantum.hybrid_networks.utils": [[2, 1, 1, "", "roll_numpy"], [2, 1, 1, "", "roll_torch"]], "ingenii_quantum.qubo": [[3, 0, 0, "-", "graph"], [3, 0, 0, "-", "segmentation"]], "ingenii_quantum.qubo.graph": [[3, 1, 1, "", "apply_similarity"], [3, 1, 1, "", "canberra_distance"], [3, 1, 1, "", "chebyshev_distance"], [3, 1, 1, "", "create_graph"], [3, 1, 1, "", "euclidean_distance"], [3, 1, 1, "", "gaussian_similarity"], [3, 1, 1, "", "image_to_grid_graph"], [3, 1, 1, "", "jensen_shannon_divergence"], [3, 1, 1, "", "minkowski_distance"]], "ingenii_quantum.qubo.segmentation": [[3, 1, 1, "", "QUBO_formulation"], [3, 1, 1, "", "decode_binary_string"], [3, 1, 1, "", "gurobi_qubo_solver"]], "ingenii_quantum.tensor_networks": [[4, 0, 0, "-", "VBMF"], [4, 0, 0, "-", "tucker_decomposition"]], "ingenii_quantum.tensor_networks.VBMF": [[4, 1, 1, "", "EVBMF"], [4, 1, 1, "", "EVBsigma2"], [4, 1, 1, "", "VBMF"], [4, 1, 1, "", "VBsigma2"], [4, 1, 1, "", "estimate_ranks"], [4, 1, 1, "", "phi0"], [4, 1, 1, "", "phi1"], [4, 1, 1, "", "tau"]], "ingenii_quantum.tensor_networks.tucker_decomposition": [[4, 1, 1, "", "count_params"], [4, 1, 1, "", "tucker_decomposition_conv_layer"]], "ingenii_quantum.visualizer": [[1, 2, 1, "", "QuantumVisualizer"]], "ingenii_quantum.visualizer.QuantumVisualizer": [[1, 4, 1, "", "area_segment"], [1, 4, 1, "", "bit_string_index"], [1, 4, 1, "", "color_range"], [1, 4, 1, "", "count_control_num"], [1, 4, 1, "", "draw_arrow"], [1, 4, 1, "", "draw_basis_states"], [1, 4, 1, "", "draw_bloch_sphere"], [1, 4, 1, "", "draw_color_legend"], [1, 4, 1, "", "draw_geometric_plots"], [1, 4, 1, "", "draw_phase_disks"], [1, 4, 1, "", "draw_probabilities"], [1, 4, 1, "", "draw_qsphere"], [1, 4, 1, "", "draw_state_space"], [1, 4, 1, "", "flip_bit"], [1, 4, 1, "", "get_colors"], [1, 4, 1, "", "get_statevectors"], [1, 4, 1, "", "get_transformed_bitstrings"], [1, 4, 1, "", "height_for_probability"], [1, 4, 1, "", "hex_to_rgb"], [1, 4, 1, "", "lex_index"], [1, 4, 1, "", "n_choose_k"], [1, 4, 1, "", "phase_to_rgb"], [1, 4, 1, "", "statevector_to_angles"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "terms": {"": [1, 2, 4], "0": [1, 2, 3], "0001": 2, "001": [1, 2], "06": 2, "08": 1, "1": [1, 2, 3, 4], "10": [2, 3], "100": 2, "1000": 2, "12": 2, "14": 4, "141592653589793": 1, "16": 2, "17": 3, "19": 2, "1e": [1, 2], "2": [1, 2, 3, 4], "2012": 4, "2013": 4, "2d": 2, "2\u03c0": 2, "3": [1, 2, 3], "300": 2, "32": 3, "37": 4, "3d": 2, "4": 2, "4096": 2, "5": 2, "50": 2, "512": 2, "5707963267948966": 1, "6": 2, "64": 1, "8": [1, 2], "95": 2, "A": [1, 4], "By": 2, "For": 2, "If": [1, 2, 4], "Ising": 2, "It": [2, 3], "The": [1, 2, 4], "To": [0, 5], "abscissa": 2, "absolut": 2, "across": 2, "addition": 1, "advanc": 4, "aer_simul": 2, "after": [1, 2], "al": 4, "algorithm": 2, "all": [1, 2], "along": 4, "alpha": [2, 3, 4], "amplitud": 2, "an": [1, 2], "analyt": 4, "anc_qb": 2, "ancilla": 2, "angl": 1, "anneal": 3, "ansatz": 2, "appli": [1, 2, 3, 4], "applic": 2, "apply_ansatz": [1, 2], "apply_similar": [1, 3], "ar": [2, 3, 4], "arc": 1, "area": 1, "area_seg": [1, 6], "arg": [2, 3], "around": 3, "arrai": [1, 2, 3, 4], "arrow": 1, "aspect": 4, "associ": 2, "averag": 2, "ax": 1, "axi": 1, "azimuth": 1, "b": 3, "backend": 2, "backent": 2, "base": [1, 2, 4], "basi": 1, "bay": 4, "bayesian": 4, "befor": 1, "best": 2, "better": 2, "between": [1, 2, 3], "binari": [1, 3], "binomi": 1, "bit": 1, "bit_string_index": [1, 6], "bitstr": 1, "bloch": 1, "block": 2, "bool": [1, 2], "boolean": 1, "both": 2, "box": 2, "c": 1, "c1": 1, "c2": 1, "cacb": 4, "calcul": [1, 2, 3, 4], "can": [2, 4], "canberra": 3, "canberra_dist": [1, 3], "charact": 1, "chebyshev": 3, "chebyshev_dist": [1, 3], "check": 2, "check_converg": [1, 2], "choos": 1, "chord": 1, "chosen": [2, 3], "circl": 1, "circuit": [1, 2], "circuit_10": 2, "circuit_13": 2, "circuit_14": 2, "circuit_15": 2, "circuit_6": 2, "circuit_9": 2, "circular": 1, "class": [1, 2], "class_paramet": [1, 2], "cluster": 2, "cnot": 2, "code": [2, 4], "coeffici": 1, "color": 1, "color_rang": [1, 6], "column": [2, 4], "combin": 1, "compar": 2, "complex": 1, "complex_numb": 1, "compos": 2, "comput": [1, 2, 4], "compute_express": [1, 2], "connect": [1, 2], "consecut": [1, 2], "consid": [1, 2], "constraint": 3, "contain": [1, 2, 4], "content": 6, "contribut": 2, "control": 3, "converg": 2, "convert": [1, 3], "convolut": 4, "coordin": [1, 3], "correspond": [1, 2, 4], "count": [1, 4], "count_control_num": [1, 6], "count_param": [1, 4], "cpu": 2, "creat": [1, 2, 3], "create_graph": [1, 3], "create_lay": [1, 2], "cuda": 2, "current": [1, 2], "curv": 2, "custom": 6, "cyclic": 1, "d2n": 2, "data": [2, 3], "data_smal": 3, "decod": 3, "decode_binary_str": [1, 3], "decompos": 4, "decomposit": 4, "decrement": 2, "default": [1, 2], "defin": 2, "degre": 1, "depth": [1, 2], "deriv": 4, "descript": [1, 2], "desir": 1, "detect": 2, "determin": 2, "dev": 2, "deviat": 3, "devic": 2, "diagon": 4, "diagram": 1, "dict": [1, 3, 4], "dictionari": [1, 4], "differ": 2, "dim": 2, "dimens": 2, "dimension": 4, "disk": 1, "display_math": 1, "distanc": [1, 3], "distribut": [2, 3], "diverg": [2, 3], "divis": 1, "draw": 1, "draw_arrow": [1, 6], "draw_basis_st": [1, 6], "draw_bloch_spher": [1, 6], "draw_color_legend": [1, 6], "draw_geometric_plot": [1, 6], "draw_phase_disk": [1, 6], "draw_prob": [1, 6], "draw_qspher": [1, 6], "draw_state_spac": [1, 6], "dx": 2, "dy": 2, "dz": 2, "each": [1, 2, 4], "edg": [2, 3], "edge_detect": [1, 6], "edgedetector2d": [1, 2], "edgedetector3d": [1, 2], "edgedetectorbas": [1, 2], "either": 2, "element": 1, "empir": 4, "encod": [2, 3], "end": [1, 2], "energi": 4, "ensur": 3, "entangl": 2, "entanglingcapac": [1, 2], "equal": [1, 2], "estim": 4, "estimate_rank": [1, 4], "et": 4, "euclidean": 3, "euclidean_dist": [1, 3], "evbmf": [1, 4], "evbsigma2": [1, 4], "everi": 2, "evolut": [1, 2], "exampl": 2, "example_paramet": [1, 2], "exercis": 6, "exercise2_1": [1, 6], "exercise2_2": [1, 6], "exercise2_3": [1, 6], "exercise2_4": [1, 6], "exercise2_5": [1, 6], "exercise3_1": [1, 6], "exercise3_10": [1, 6], "exercise3_2": [1, 6], "exercise3_3": [1, 6], "exercise3_4": [1, 6], "exercise3_5": [1, 6], "exercise3_6": [1, 6], "exercise3_7": [1, 6], "exercise3_8": [1, 6], "exercise3_9": [1, 6], "exercise4_1": [1, 6], "exercise4_3": [1, 6], "exercise5_7": [1, 6], "exercise6_1": [1, 6], "exercise6_2": [1, 6], "exercise6_3": [1, 6], "exercise6_4": [1, 6], "exercise6_6": [1, 6], "experi": 2, "exploit": 2, "express": [1, 2], "extract": 1, "f": 4, "factor": [2, 4], "fals": [1, 2], "famili": 2, "featur": 2, "fidel": 2, "fig": 1, "figsiz": 1, "figur": 1, "file": [1, 2], "file_nam": 2, "filenam": [1, 2], "fill": 1, "filter": [1, 6], "filtered_imag": 2, "final": 2, "first": 4, "flexibl": 2, "flip": 1, "flip_bit": [1, 6], "float": [1, 2, 3, 4], "form": 2, "format": 1, "formul": 3, "fraction": 1, "framework": 4, "free": 4, "from": [1, 2, 4], "frqi": 2, "full": 1, "fulli": [2, 4], "function": [2, 3, 4], "g": 3, "g1": 2, "g2": 2, "g3": 2, "gate": [1, 2], "gate_nam": [1, 2], "gates_nam": 2, "gates_set": 2, "gaussian": 3, "gaussian_similar": [1, 3], "gener": [1, 2], "generate_qc": [1, 2], "generate_random_param": [1, 2], "generate_reservoir": [1, 2], "generate_unitari": [1, 2], "geometr": 1, "get": 4, "get_color": [1, 6], "get_quantum_filt": [1, 2], "get_secret_st": [1, 6], "get_shap": [1, 2], "get_statevector": [1, 6], "get_transformed_bitstr": [1, 6], "given": [1, 4], "global": 4, "gradient": 1, "graph": [1, 6], "gray_img": 3, "grayscal": 3, "grid": 3, "gurobi": 3, "gurobi_qubo_solv": [1, 3], "gurobi_qubo_valu": 3, "h": [1, 2, 4], "h_larg": 2, "ha": [2, 4], "haar": 2, "haar_fidel": [1, 2], "hadamard": 2, "half": 2, "hardwar": 2, "height": [1, 3], "height_for_prob": [1, 6], "here": [1, 3], "hex_str": 1, "hex_to_rgb": [1, 6], "hexadecim": 1, "higher": 2, "hilbert": 2, "horizont": 2, "hybrid_network": [1, 6], "hyperparamet": [3, 4], "i": [0, 1, 2, 3, 4], "i_": 2, "id": 2, "iiiz": 2, "iizi": 2, "ij": 2, "im": 2, "imag": [2, 3], "image_list": 2, "image_path": 2, "image_to_grid_graph": [1, 3], "implement": [2, 4], "import": 3, "inch": 1, "includ": [1, 4], "index": [1, 2], "indic": 1, "inform": [1, 4], "ingenii": 5, "initi": 2, "input": [1, 2, 3, 4], "input_arrai": 2, "input_s": 2, "inspir": [0, 2], "instanc": 1, "int": [1, 2, 3, 4], "integ": 2, "intens": 2, "iter": 2, "its": 2, "izii": 2, "j": 2, "jan": 4, "jensen": 3, "jensen_shannon_diverg": [1, 3], "journal": 4, "k": 1, "kera": 2, "kl": 2, "knowledg": 4, "kwarg": 1, "l": [2, 4], "label": 1, "last": 2, "layer": [1, 4, 6], "lead": 2, "learn": [0, 4], "left": 4, "legend": 1, "length": 1, "level": 2, "lex": 1, "lex_index": [1, 6], "like": 1, "linear": 3, "list": [1, 2, 3, 4], "load": 2, "load_gat": [1, 2], "load_reservoir": [1, 2], "load_unitari": [1, 2], "log2": 2, "lower": 2, "lst": 1, "m": 4, "machin": [0, 4], "mad": 2, "mae_list": 2, "map": 1, "mask": [2, 3], "matlab": 4, "matplotlib": 1, "matric": [2, 4], "matrix": [1, 2, 4], "max_it": 2, "maximum": [2, 4], "mean": 2, "measur": 2, "method": 2, "meyer": 2, "meyer_wallach_entangl": [1, 2], "minkowski": 3, "minkowski_dist": [1, 3], "mode": 4, "model": [2, 3, 4], "modul": 6, "move": 2, "mu": 2, "multipl": [2, 4], "n": [1, 2], "n_block": 1, "n_choose_k": [1, 6], "n_dimens": 2, "n_layer": 2, "n_sampl": 2, "nakajima": 4, "name": [1, 2, 3], "ndarrai": [1, 2, 3, 4], "need": 2, "neighbor": 2, "neighbor_s": 2, "neighborhood": 2, "network": [2, 4], "networkx": 3, "neural": [2, 4], "new": 1, "nn": 4, "nois": 4, "non": 1, "none": [1, 2, 3, 4], "np": [1, 2, 3], "nqbit": [1, 2], "num_featur": 2, "num_filt": 2, "num_gat": [1, 2], "num_qubit": 1, "num_sampl": 2, "number": [1, 2, 4], "numpi": [1, 2, 3, 4], "nxn": 2, "object": [1, 2, 4], "observ": [2, 4], "old_vector": 1, "one": 2, "onli": 2, "optim": [3, 4], "option": [1, 2, 4], "optional_paramet": [1, 2], "order": 1, "ordin": 2, "origin": 2, "otherwis": 2, "output": [1, 2], "over": 2, "p": 2, "p1": 3, "p2": 3, "packag": [0, 6], "pairwis": 2, "paper": 4, "param": [1, 2, 3, 4], "paramet": [1, 2, 3, 4], "parameter": 2, "params_model_reduc": 1, "params_shap": 2, "part": 4, "partit": 2, "path": [1, 2], "pca": 4, "peak": 2, "pennylan": 2, "per": 2, "percentil": 2, "perfect": 4, "perform": 3, "permut": 2, "phase": 1, "phase_to_rgb": [1, 6], "phi": 1, "phi0": [1, 4], "phi1": [1, 4], "phi_reconstruct": 1, "pi": 1, "pickl": 2, "pip": [0, 5], "pixel": [2, 3], "plot": 1, "plot_circuit": 1, "plot_phase_disk": 1, "plt_phase_disk": 1, "png": 2, "point": 1, "polar": 1, "posit": 1, "post": 4, "posterior": 4, "pqc": 2, "pqc_fidel": [1, 2], "previou": [1, 2], "prior": 4, "prob": 1, "probabl": [1, 2], "problem": 3, "problem_formulation_tim": 3, "process": [1, 2, 4], "processor": 1, "produc": 2, "product": 4, "proport": [1, 3], "provid": [1, 2, 3], "pyplot": 1, "python": 0, "pytorch": 2, "q": [1, 2], "qaoa": 2, "qc": 1, "qinsp_filt": [1, 6], "qiskit": 2, "qnn_layer": [1, 2], "qnn_layer_qaoa": [1, 2], "qnode": 1, "qsphere": 1, "quadrat": 3, "quantum": [1, 2, 3, 5], "quantumfclay": [1, 2], "quantumfilters2d": [1, 2], "quantumfilters3d": [1, 2], "quantumfiltersbas": [1, 2], "quantuminspiredimageprocessor": [1, 2], "quantumnn": 2, "quantumvisu": [1, 6], "qubit": [1, 2], "qubits_set": 2, "qubo": [1, 6], "qubo_formul": [1, 3], "r": [1, 3], "radian": 1, "radiu": 1, "rais": 1, "random": 2, "random_weight": 1, "randomli": 2, "rang": 2, "rank": 4, "ratio": 4, "real": 2, "recoveri": 4, "reduc": 2, "redund": 1, "refer": 4, "rel": 2, "repres": [1, 2, 3, 4], "represent": [1, 2], "required_paramet": [1, 2], "research": 4, "reservoir": 2, "residu": 4, "result": 4, "result_i": 1, "result_x": 1, "return": [1, 2, 3, 4], "return_black": 1, "rgb": 1, "right": 4, "roll": 2, "roll_numpi": [1, 2], "roll_torch": [1, 2], "rotat": 2, "row": [2, 4], "run": [0, 1, 2], "run_box": [1, 2], "run_image_qiskit": [1, 2], "run_image_torch": [1, 2], "sampl": 2, "save": [1, 2], "saved_gates_filenam": 2, "saved_qubits_filenam": 2, "sd_prop": 3, "second": 4, "segment": [1, 6], "segmentation_mask": 3, "select": 2, "select_imag": [1, 2], "sequenti": 4, "set": [1, 2, 4], "shannon": 3, "shape": [2, 4], "shape_window": 2, "sharper": 2, "shinichi": 4, "shot": 2, "show": [1, 2], "show_state_label": 1, "show_state_phas": 1, "sigma": 3, "sigma2": 4, "similar": 3, "simul": [2, 3], "sinc": 1, "singl": 1, "singular": 4, "size": [1, 2], "slide": 2, "smaller": [2, 4], "smooth": 3, "smoother": 2, "solut": 4, "solver": 3, "sourc": [1, 2, 3, 4], "space": [1, 2], "specifi": [1, 2], "sphere": 1, "spheric": 1, "split": 2, "squar": 4, "stadard": 3, "start": 1, "state": [1, 2], "statevector": 1, "statevector_to_angl": [1, 6], "static": 1, "statist": [1, 6], "steep": 2, "step": [1, 2], "str": [1, 2, 3], "stride": 2, "string": [1, 3], "submodul": 6, "subpackag": 6, "sum": [2, 4], "sum_neighbour": [1, 2], "system": 4, "t": 2, "tail": 3, "tau": [1, 4], "template_weight": 1, "tensor": [2, 4], "tensor_network": [1, 6], "tensordot": 2, "term": 1, "text": 1, "than": 2, "them": 2, "theta": 1, "thi": [2, 4], "threshold": [2, 4], "time": [2, 3], "tol": [1, 2], "toler": [1, 2], "torch": [2, 4], "total": [1, 2], "total_area": 1, "total_entangling_g": 1, "total_qb": 2, "total_single_qubit_g": 1, "tqdm": 2, "train": 4, "transform": [1, 2], "transit": 2, "transvers": 2, "true": [1, 2], "truncat": 4, "tucker": 4, "tucker_decomposit": [1, 6], "tucker_decomposition_conv_lay": [1, 4], "tupl": [1, 2, 4], "two": [1, 2, 3, 4], "type": [1, 2, 3, 4], "type_lay": 2, "u": 4, "under": 1, "unfold": 4, "unitari": [1, 2], "unitaries_file_nam": 2, "unitaries_list": 2, "until": 2, "us": [1, 2, 3, 4], "use_degre": 1, "user": 2, "util": [1, 6], "v": 4, "valu": [1, 2, 3, 4], "varianc": 4, "variat": 4, "vbmf": [1, 6], "vbsigma2": [1, 4], "vector": [1, 4], "verbos": 2, "version": 2, "versu": 2, "vertic": 2, "visual": 6, "visualizationerror": 1, "volum": 2, "w": 2, "w0": 2, "w1": 2, "w2": 2, "wa": 2, "wallach": 2, "we": [2, 3], "weigh": 2, "weight": [2, 3, 4], "weight_input": 2, "weight_lay": 2, "weights_input": 2, "weights_lay": 2, "where": [2, 3, 4], "wherea": 2, "whether": [1, 2], "which": [2, 4], "whole": 2, "whose": 4, "width": 3, "window": 2, "window_arrai": 2, "wn": 2, "x": [1, 2, 3, 4], "x1": 3, "x2": 3, "x_train": 1, "xubar": 4, "y": [1, 3, 4], "y1": 3, "y2": 3, "z": 2, "zero": 1, "ziii": 2, "zz": 2, "zzfeaturemap": 2}, "titles": ["Welcome to Ingenii Quantum\u2019s Documentation!", "ingenii_quantum package", "ingenii_quantum.hybrid_networks package", "ingenii_quantum.qubo package", "ingenii_quantum.tensor_networks package", "Installation", "ingenii_quantum"], "titleterms": {"": 0, "content": [0, 1, 2, 3, 4], "custom": 1, "document": 0, "edge_detect": 2, "exercis": 1, "filter": 2, "graph": 3, "hybrid_network": 2, "ingenii": 0, "ingenii_quantum": [1, 2, 3, 4, 6], "instal": [0, 5], "layer": 2, "modul": [1, 2, 3, 4], "packag": [1, 2, 3, 4], "qinsp_filt": 2, "quantum": 0, "qubo": 3, "segment": 3, "statist": 2, "submodul": [1, 2, 3, 4], "subpackag": 1, "tabl": 0, "tensor_network": 4, "tucker_decomposit": 4, "util": 2, "vbmf": 4, "visual": 1, "welcom": 0}})